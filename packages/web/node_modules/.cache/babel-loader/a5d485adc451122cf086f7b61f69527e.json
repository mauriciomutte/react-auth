{"ast":null,"code":"import _slicedToArray from \"/home/mauriciomutte/Documentos/repo/react-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mauriciomutte/Documentos/repo/react-auth/packages/web/src/pages/Login.js\";\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { Card, Form, Input, Button, Error } from '../components/AuthForm';\nimport { useAuth } from '../context/auth';\nexport default function Login(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoggedIn = _useState2[0],\n        setLoggedIn = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isError = _useState4[0],\n        setIsError = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        password = _useState8[0],\n        setPassword = _useState8[1];\n\n  const _useAuth = useAuth(),\n        setAuthTokens = _useAuth.setAuthTokens;\n\n  function postLogin() {\n    axios.post('http://localhost:3030/login', {\n      email,\n      password\n    }).then(result => {\n      if (result.status === 200) {\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n      } else {\n        setIsError(true);\n      }\n    }).catch(e => {\n      setIsError(true);\n    });\n  }\n\n  if (isLoggedIn) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Input, {\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: postLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Sign In\")), React.createElement(Link, {\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Don't have an account?\"), isError && React.createElement(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"The email or password provided were incorrect!\"));\n}","map":{"version":3,"sources":["/home/mauriciomutte/Documentos/repo/react-auth/packages/web/src/pages/Login.js"],"names":["React","useState","Link","Redirect","axios","Card","Form","Input","Button","Error","useAuth","Login","props","isLoggedIn","setLoggedIn","isError","setIsError","email","setEmail","password","setPassword","setAuthTokens","postLogin","post","then","result","status","data","catch","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,KAApC,QAAiD,wBAAjD;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,oBACDX,QAAQ,CAAC,KAAD,CADP;AAAA;AAAA,QAC5BY,UAD4B;AAAA,QAChBC,WADgB;;AAAA,qBAELb,QAAQ,CAAC,KAAD,CAFH;AAAA;AAAA,QAE5Bc,OAF4B;AAAA,QAEnBC,UAFmB;;AAAA,qBAGTf,QAAQ,CAAC,EAAD,CAHC;AAAA;AAAA,QAG5BgB,KAH4B;AAAA,QAGrBC,QAHqB;;AAAA,qBAIHjB,QAAQ,CAAC,EAAD,CAJL;AAAA;AAAA,QAI5BkB,QAJ4B;AAAA,QAIlBC,WAJkB;;AAAA,mBAMTV,OAAO,EANE;AAAA,QAM3BW,aAN2B,YAM3BA,aAN2B;;AAQnC,WAASC,SAAT,GAAqB;AACnBlB,IAAAA,KAAK,CAACmB,IAAN,CAAW,6BAAX,EAA0C;AACxCN,MAAAA,KADwC;AAExCE,MAAAA;AAFwC,KAA1C,EAGGK,IAHH,CAGQC,MAAM,IAAI;AAChB,UAAGA,MAAM,CAACC,MAAP,KAAkB,GAArB,EAA0B;AACxBL,QAAAA,aAAa,CAACI,MAAM,CAACE,IAAR,CAAb;AACAb,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAHD,MAGO;AACLE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KAVD,EAUGY,KAVH,CAUSC,CAAC,IAAI;AACZb,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAZD;AAaD;;AAED,MAAIH,UAAJ,EAAgB;AACd,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEI,KAFT;AAGE,IAAA,QAAQ,EAAEY,CAAC,IAAI;AAAEX,MAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AAA0B,KAH7C;AAIE,IAAA,WAAW,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAEZ,QAFT;AAGE,IAAA,QAAQ,EAAEU,CAAC,IAAI;AAAET,MAAAA,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA6B,KAHhD;AAIE,IAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAET,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbF,CADF,EAgBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAhBF,EAiBIP,OAAO,IAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAjBf,CADF;AAqBD","sourcesContent":["import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { Card, Form, Input, Button, Error } from '../components/AuthForm';\nimport { useAuth } from '../context/auth';\n\nexport default function Login(props) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const { setAuthTokens } = useAuth();\n\n  function postLogin() {\n    axios.post('http://localhost:3030/login', {\n      email,\n      password\n    }).then(result => {\n      if(result.status === 200) {\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n      } else {\n        setIsError(true);\n      }\n    }).catch(e => {\n      setIsError(true);\n    });\n  }\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Card>\n      <Form>\n        <Input \n          type=\"email\" \n          value={email}\n          onChange={e => { setEmail(e.target.value) }}\n          placeholder=\"email\"\n        />\n        <Input \n          type=\"password\" \n          value={password}\n          onChange={e => { setPassword(e.target.value) }}\n          placeholder=\"password\"\n        />\n        <Button onClick={postLogin}>Sign In</Button>\n      </Form>\n      <Link to=\"/signup\">Don't have an account?</Link>\n      { isError && <Error>The email or password provided were incorrect!</Error> }\n    </Card>\n  );\n}"]},"metadata":{},"sourceType":"module"}